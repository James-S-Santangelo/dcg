import os
import glob
import pandas as pd
from snakemake.utils import min_version

min_version('7.16.0')

configfile: '../config/hpcnode.yaml'

# Haplotype names. Used for finding haplotype fasta
HAPS = ['occ1', 'occ2', 'pall1', 'pall2']

# Input files
HAPLOTYPE_FASTA_DIR = config['haplotype_fastas']
HCN_LOCI_FASTA = config['hcn_loci_fasta']
GENMAP_RESOURCE_DIR = config['genmap_files']
REPBASE = config['repbase']
RNASEQ_ACCESSIONS = pd.read_csv(config['rnaseq_accessions'], sep = '\t')['accession'].tolist()
KOOYERS_RNASEQ = [f for f in os.listdir(config['kooyers_rnaseq']) if f.startswith('TR')]

# Variables for specific rules
ALL_RNASEQ_SAMPLES = RNASEQ_ACCESSIONS + KOOYERS_RNASEQ

# Paths for output files
LOG_DIR = config['log_prefix']
REF_DIR = f"{config['results_prefix']}/ref"
HCN_LOCI_DIR = f"{config['results_prefix']}/hcn_loci"
SYNTENY_DIR = f"{config['results_prefix']}/synteny"
GENMAP_RESULTS_DIR = f"{config['results_prefix']}/gen_map"
ANNOTATION_DIR = f"{config['results_prefix']}/annotation"
PROGRAM_RESOURCE_DIR = f"{config['results_prefix']}/program_resources"

EXAMPLE_FASTA = HAPLOTYPE_FASTA_DIR + '/occ1/new_final_assembly.fasta' 

wildcard_constraints:
    acc = '|'.join(ALL_RNASEQ_SAMPLES)

include: 'rules/common.smk'

rule all:
    input:
        f'{REF_DIR}/ref.done',
        f'{HCN_LOCI_DIR}/hcn_loci.done',
        f'{SYNTENY_DIR}/synteny.done',
        f"{GENMAP_RESULTS_DIR}/gen_map.done",
        f"{ANNOTATION_DIR}/annotation.done",

include: 'rules/ref.smk'
include: 'rules/hcn_loci.smk'
include: 'rules/synteny.smk'
include: 'rules/recombination_map.smk'
include: 'rules/annotation.smk'

