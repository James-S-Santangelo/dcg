# Python script to remap attributes and fix some issues flagged by NCBI

import re
import gffutils

db = gffutils.create_db(snakemake.input['gff'][0], snakemake.output['db'], force = True)

with open(snakemake.output['gff'], 'w') as fout:
    fout.write("##gff-version 3\n")
    for feat in db.all_features():
        
        if feat.featuretype == 'gene':
            # Remove incremental numbering of gene names generated by funannotate
            # Reassign as "gene" attribute
            if 'Name' in feat.attributes.keys():
                feat.attributes['gene'] = [re.sub('_\d+$', '', feat.attributes['Name'][0])]
                feat.attributes.pop('Name')
                
            # Extend truncated gene to stop codon
            if feat.id == 'ACLI19_g45676':
                feat.start = 1814
            # Mark terminal gene missing stop codong as "pseudo"
            if feat.id == 'ACLI19_g50411':
                feat.attributes['pseudo'] = ['true']

        elif feat.featuretype == 'mRNA':
            # Remove first transcript of ACLI19_g11316 since missing stop codon and second isoform looks good
            if feat.id == 'ACLI19_g11316.t1':
                continue
                
            # Assign protein and transcript IDs
            locus_tag = [f.attributes['locus_tag'][0] for f in db.parents(feat.id, featuretype='gene')][0]
            transcript = feat.attributes['ID'][0].split('.')[1]
            feat.attributes['protein_id'] = [f"gnl|NessUTM|{transcript}.{locus_tag}"]
            feat.attributes['transcript_id'] = [f"gnl|NessUTM|mrna{transcript}.{locus_tag}"]

            # Extend truncated mRNA to stop codon
            gene_parent = [f.id for f in db.parents(feat.id, featuretype='gene')][0]
            if gene_parent == 'ACLI19_g45676':
                feat.start = 1814
            
        elif feat.featuretype == 'CDS':
            
            # Remove first transcript of ACLI19_g11316 since missing stop codon and second isoform looks good
            if feat.attributes['Parent'][0] == 'ACLI19_g11316.t1':
                continue
                
            # Extend truncated CDS to stop codon
            gene_parent = [f.id for f in db.parents(feat.id, featuretype='gene')][0]
            if gene_parent == 'ACLI19_g45676':
                feat.start = 1814
                
            # Mark terminal gene missing stop codong as "pseudo"
            if gene_parent == 'ACLI19_g50411':
                feat.attributes['pseudo'] = ['true']
                
            # Assign protein and transcript IDs
            locus_tag = [f.attributes['locus_tag'][0] for f in db.parents(feat.id, featuretype='gene')][0]
            transcript = feat.attributes['Parent'][0].split('.')[1]
            feat.attributes['protein_id'] = [f"gnl|NessUTM|{transcript}.{locus_tag}"]
            feat.attributes['transcript_id'] = [f"gnl|NessUTM|mrna{transcript}.{locus_tag}"]
            
            # Assign product & EC Number
            product = [f.attributes['product'][0] for f in db.parents(feat.id, featuretype='mRNA')][0]
            feat.attributes['product'] = [product]
            
            mrna_parent = [f.id for f in db.parents(feat.id, featuretype='mRNA')][0]
            if 'ec_number' in db[mrna_parent].attributes.keys():
                feat.attributes['ec_number'] = db[mrna_parent].attributes['ec_number']

        # Don't need exons in final GFF
        elif feat.featuretype == 'exon':
            continue

        fout.write(f"{str(feat)}\n")
